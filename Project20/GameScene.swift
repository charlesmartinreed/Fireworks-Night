//
//  GameScene.swift
//  Project20
//
//  Created by Charles Martin Reed on 8/24/18.
//  Copyright Â© 2018 Charles Martin Reed. All rights reserved.
//

import SpriteKit
import GameplayKit

class GameScene: SKScene {
    
    //MARK:- Class properties
    var gameTimer: Timer!
    var fireworks = [SKNode]() //will have container, image and fuse nodes
    
    //our fireworks will launch right off the screen to a particular side
    let leftEdge = -22
    let bottomEdge = -22
    let rightEdge = 1024 + 22
    
    var score = 0 {
        didSet {
            //code for the score label goes here
        }
    }
    
    override func didMove(to view: SKView) {
        let background = SKSpriteNode(imageNamed: "background.png")
        background.position = CGPoint(x: 512, y: 384)
        background.blendMode = .replace
        background.zPosition = -1
        addChild(background)
        
        //we will create a Timer that launches fireworks every 6 seconds
        gameTimer = Timer.scheduledTimer(timeInterval: 6, target: self, selector: #selector(launchFireworks), userInfo: nil, repeats: true)
       
    }
    
    override func touchesBegan(_ touches: Set<UITouch>, with event: UIEvent?) {
        //code
    }
    
    //MARK:- Creating and launching our fireworks
    //needs to accept a movement speed for the firework, and its X and Y positions
    
    func createFirework(xMovement: CGFloat, x: Int, y: Int) {
        
        //create SKNode to act as the fireworks container
        let node = SKNode()
        node.position = CGPoint(x: x, y: y)
        
        //create a rocket sprite node and name it "firework". Adjust its colorBlendFactor so that we can color it. Add the sprite to the container node.
        //since our rocket is actually white, when we set colorBlendFactor to 1, it'll actually take the color generated by our random generator below
        let firework = SKSpriteNode(imageNamed: "rocket")
        firework.colorBlendFactor = 1 //describes how color is blended with obj texture
        firework.name = "firework"
        node.addChild(firework)
        
        //give the firework sprite node one of three random colors, cyan red or green.
        switch GKRandomSource.sharedRandom().nextInt(upperBound: 3) {
        case 0:
            firework.color = .cyan
        case 1:
            firework.color = .green
        case 2:
            firework.color = .red
            
        default:
            break
        }
        
        //create a UIBezierPath that will represent the movement of the firework
        let path = UIBezierPath()
        path.move(to: CGPoint(x: 0, y: 0))
        path.addLine(to: CGPoint(x: xMovement, y: 1000))
        
        //Tell the container node to follow that path using .follow action, turning itself as needed by setting orientToPath and asOffset to true
        let move = SKAction.follow(path.cgPath, asOffset: true, orientToPath: true, speed: 200)
        node.run(move)
        
        //Create particles behind the rocket to make it look like the fireworks are lit
        let emitter = SKEmitterNode(fileNamed: "fuse")!
        emitter.position = CGPoint(x: 0, y: -22)
        node.addChild(emitter)
        
        //add the firework to our fireworks array AND add the container to the scene
        fireworks.append(firework)
        addChild(node)
        
    }
    
    //calls createFirework in order to spread out the fireworks on screen
   @objc func launchFireworks() {
    let movementAmount: CGFloat = 1800
    
    //upperBound of 4 because we're generating 5 rockets
    switch GKRandomSource.sharedRandom().nextInt(upperBound: 4) {

        //fire the five rockets straight up
    case 0:
        createFirework(xMovement: 0, x: 512, y: bottomEdge)
        createFirework(xMovement: 0, x: 512 - 200, y: bottomEdge)
        createFirework(xMovement: 0, x: 512 - 100, y: bottomEdge)
        createFirework(xMovement: 0, x: 512 + 100, y: bottomEdge)
        createFirework(xMovement: 0, x: 512 + 200, y: bottomEdge)
    
    case 1:
        //fire five, in a fan
        createFirework(xMovement: 0, x: 512, y: bottomEdge)
        createFirework(xMovement: -200, x: 512 - 200, y: bottomEdge)
        createFirework(xMovement: -100, x: 512 - 100, y: bottomEdge)
        createFirework(xMovement: 100, x: 512 + 100, y: bottomEdge)
        createFirework(xMovement: 200, x: 512 + 200, y: bottomEdge)
    
    case 2:
        //fire five, from the left to the right
        createFirework(xMovement: movementAmount, x: leftEdge, y: bottomEdge + 400)
        createFirework(xMovement: movementAmount, x: leftEdge, y: bottomEdge + 300)
        createFirework(xMovement: movementAmount, x: leftEdge, y: bottomEdge + 200)
        createFirework(xMovement: movementAmount, x: leftEdge, y: bottomEdge + 100)
        createFirework(xMovement: movementAmount, x: leftEdge, y: bottomEdge)
    
    case 3:
        //fire five, from the right to the left
        createFirework(xMovement: -movementAmount, x: rightEdge, y: bottomEdge + 400)
        createFirework(xMovement: -movementAmount, x: rightEdge, y: bottomEdge + 300)
        createFirework(xMovement: -movementAmount, x: rightEdge, y: bottomEdge + 200)
        createFirework(xMovement: -movementAmount, x: rightEdge, y: bottomEdge + 100)
        createFirework(xMovement: -movementAmount, x: rightEdge, y: bottomEdge)
    
    default:
        break
    }
    
    }
}
